# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
name: GitHub Actions Workflow with SNOW custom tasks
on: workflow_dispatch
#  pull_request_target:
#    types:
#      - closed
jobs:
    build:
        # Running your workflow when a pull request merges
        # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#running-your-workflow-when-a-pull-request-merges-1
        #if: github.event.pull_request.merged == true
        name: Build
        runs-on: ubuntu-latest
        steps:           
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
            - name: Set up JDK 11
              uses: actions/setup-java@v1
              with:
                  java-version: 11
            - name: Cache SonarCloud packages
              uses: actions/cache@v1
              with:
                  path: ~/.sonar/cache
                  key: ${{ runner.os }}-sonar
                  restore-keys: ${{ runner.os }}-sonar
            - name: Cache Maven packages
              uses: actions/cache@v1
              with:
                  path: ~/.m2
                  key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                  restore-keys: ${{ runner.os }}-m2
    test:
        #if: github.event.pull_request.merged == true
        name: Test
        needs: build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
            - name: List current directory
              run: ls -a
            - name: Run Tests with Maven
              run: mvn -B test --file pom.xml
            # run: |
            #       ls -l
            # mvn clean test
            # run: mvn test
            # mvn -B test --file ./devops-test-repo/pom.xml
            - name: What's in the target directory
              run: |
                    cd target
                    ls -a
            # - name: Sonarcloud Scan
            #  env:
            #      GITHUB_TOKEN: ${{ secrets.GHP_TOKEN }}  # Needed to get PR information, if any
            #      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            #  run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=devops-test-repo
            - name: Sonar Cloud Analysis
              if: success() # always() failure() success()
              run: >                  
                mvn -B verify -DskipTests org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.organization=$SONAR_ORG_KEY -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_TOKEN
              env:
                  GITHUB_TOKEN: ${{ secrets.GHP_TOKEN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                  SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
                  SONAR_URL: ${{ secrets.SONAR_URL }}
                  SONAR_ORG_KEY: ${{ secrets.SONAR_ORG_KEY }}
